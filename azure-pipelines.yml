# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  - master
  - develop

resources:
  - repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: "573b5bd5-66ea-4cd5-8e3c-44f1e714e1ec"
  imageRepository: "uvicsengvegaspring"
  containerRegistry: "seng426group2registry.azurecr.io"
  dockerfilePath: "$(Build.SourcesDirectory)/Dockerfile"
  tag: "$(Build.BuildId)"

  # Agent VM image name
  vmImageName: "ubuntu-latest"

stages:
  - stage: Build
    displayName: Build and Push
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Docker@2
            displayName: Build and push an image to container registry
            inputs:
              command: buildAndPush
              repository: $(imageRepository)
              dockerfile: $(dockerfilePath)
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)
                latest

  - stage: Testing
    displayName: Testing
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/develop')
    jobs:
      - job: Test
        displayName: Test
        steps:
          - task: Maven@3
            inputs:
              mavenPomFile: "pom.xml"
              publishJUnitResults: true
              testResultsFiles: "**/surefire-reports/TEST-*.xml"
              javaHomeOption: "JDKVersion"
              mavenVersionOption: "Default"
              mavenAuthenticateFeed: false
              effectivePomSkip: false
              sonarQubeRunAnalysis: false
              sqMavenPluginVersionChoice: "latest"
          - task: SonarQubePrepare@5
            inputs:
              SonarQube: "sonarCubeCloud"
              scannerMode: "Other"
          - task: SonarQubeAnalyze@5

  - stage: Publish
    displayName: Publish Artifacts
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
    jobs:
      - job: Publish
        displayName: Copy and Publish Artifacts
        steps:
          - task: CopyFiles@2
            inputs:
              Contents: "docker-compose.yml"
              TargetFolder: "$(Build.ArtifactStagingDirectory)"
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: "$(Build.ArtifactStagingDirectory)"
              ArtifactName: "drop"
              publishLocation: "Container"
